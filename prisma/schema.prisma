// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

// model Post {
//     id        Int      @id @default(autoincrement())
//     name      String
//     createdAt DateTime @default(now())
//     updatedAt DateTime @updatedAt

//     createdBy   User   @relation(fields: [createdById], references: [id])
//     createdById String

//     @@index([name])
// }

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String          @id @unique @default(cuid())
  name          String?
  email         String         @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Taccounts     TradingAccount?
}

// model VerificationToken {
//     identifier String
//     token      String   @unique
//     expires    DateTime

//     @@unique([identifier, token])
// }

// app schema

model TradingAccount {
  id        String   @id @default(cuid())
  margin    Int      @default(100)
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique
  watchList String[] @default(["", "", "", "", "", "", ""])
  Pin0      String   @default("ETHUSDT")
  Pin1      String   @default("BTCUSDT")
  Orders    Order[]
  // USDT_Free_balance   Float         @default(100000)
  // USDT_Locked_balance Float         @default(0)
  Assets    Assets[]
}

model Assets {
  id                 String               @id @default(cuid())
  name               String
  lockedAmount       Float                @default(0)
  freeAmount         Float
  Orders             Order[]
  DipositAndWidrawal DipositAndWidrawal[]
  TradingAccount     TradingAccount       @relation(fields: [TradingAccountId], references: [id], onDelete: Cascade)
  TradingAccountId   String

  @@unique([TradingAccountId, name], name: "unique_TradingAccountId_name")
}

model DipositAndWidrawal {
  id        String                 @id @default(cuid())
  createdAt DateTime               @default(now())
  type      DipositAndWidrawalType
  amount    Float
  Assets    Assets                 @relation(fields: [AssetsId], references: [id])
  AssetsId  String
}

model Order {
  id          Int          @id @default(autoincrement())
  openedAt    DateTime     @default(now())
  closedAt    DateTime     @updatedAt
  name        String
  quantity    Float
  price       Float
  type        OrderType
  status      OrderStatus  @default(OPEN)
  triggerType EtriggerType

  TradingAccount   TradingAccount @relation(fields: [TradingAccountId], references: [id], onDelete: Cascade)
  TradingAccountId String
  Assets           Assets         @relation(fields: [AssetsId], references: [id], onDelete: Cascade)
  AssetsId         String
}

enum EtriggerType {
  LIMIT
  STOP
  MARKET
}

enum OrderType {
  BUY
  SELL
}

enum OrderStatus {
  OPEN
  COMPLETED
  CANCELLED
}

enum DipositAndWidrawalType {
  DIPOSIT
  WIDRAWAL
}
